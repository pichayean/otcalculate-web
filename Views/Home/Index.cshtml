@{
    ViewData["Title"] = "Home Page";
}

<div>
    <form class="col-xs-12 row" method="post" action="/Home/OT" enctype="multipart/form-data">
        <div class="col-6">
            <input type="file" class="form-control" name="image" />
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-primary col-xs-12">Calculate</button>
        </div>
    </form>
    <hr />
    @if (ViewBag.OT == null)
    {

        <div class="alert alert-success" role="alert">
            <h4 class="alert-heading">Hello !</h4>
            <p>please prepair data into execel file before upload file to calculate.</p>
            <hr>
            <p class="mb-0">Whenever you need to, download template now.</p>
            @Html.ActionLink("Dowload Template", "DownloadTemlpate", "Home")

        </div>
    }

    @if (ViewBag.OTTOTAL != null)
    {
        <div class="card">
            <div class="card-header small">
                OT
                @Html.ActionLink("Clear Data", "ClearData", "Home")
            </div>
            <div class="card-body row">
                <div class="col-12">
                    @{
                        var emp = (ViewBag.OT as IEnumerable<Employee>).ToList();
                        var dep = (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>).ToList();
                    }
                    Department <span class="badge badge-primary">@dep.Count</span> |
                    Employee <span class="badge badge-primary">@emp.Count</span>
                    <hr />
                </div>
                <div class="col-12">
                    <table class="table table-striped" style="font-size:14px">
                        @{
                            int index = 1;
                            int sum = 0;
                        }
                        <tr>
                            <td width="20px">#</td>
                            <td width="100px">Department</td>
                            <td>OT(Hour)</td>
                        </tr>
                        @foreach (var item in (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>))
                        {
                            <tr>
                                <td>@index</td>
                                <td>@item.Department</td>
                                <td>@item.OT</td>
                            </tr>
                            sum = sum + item.OT;
                            index = index + 1;
                        }
                        <tr>
                            <td></td>
                            <td style="text-align:center">Total OT</td>
                            <td>@sum</td>
                        </tr>

                    </table>
                </div>
            </div>
        </div>
    }

    @if (ViewBag.OT != null)
    {
        <div class="card mt-2  class=" text-center"">
            <div class="card-header small">
                WorkHour | 1.sumperPerson[Departmet][Hour] 2.personMainDepartment[Hour-lostter] 3.personOtherDepartment[Hour] 4.sum_all[Departmet][Hour]
            </div>
            <div class="card-body">
                <div class="table-responsive">

                    <table class="table table-striped table-sm" style="font-size:12px">
                        @foreach (var item in (ViewBag.OT as IEnumerable<Employee>))
                        {
                            <tr style="background-color: #F7FFF3">
                                <td colspan="@item.WorkHours.Count" style="text-align: left!important">
                                    @item.Name |
                                    @item.DepartmentLimit |
                                    @item.MainDepartment |
                                    @item.Type
                                    =>

                                    @{
                                        string plus = "";
                                    }
                                    @foreach (var h in item.WorkHoursOtherMain)
                                    {
                                        @plus <span class="badge badge-secondary"> @h.Department [@h.Hour] </span>
                                        plus = "+";
                                    }

                                    (
                                    @{int totalot = item.WorkHours.Sum(e => e.Hour) - item.DepartmentLimit;}
                                    <span class="badge badge-success">@item.WorkHours.Sum(e => e.Hour)</span>
                                    )
                                    -
                                    <span class="badge badge-warning">@item.DepartmentLimit</span>
                                    =
                                    <span class="badge badge-primary">@totalot</span>

                                    =>

                                    @foreach (var h in item.WorkHoursOtherMain)
                                    {
                                        @if (h.Department == @item.MainDepartment)
                                        {
                                            <span class="badge badge-secondary">@h.Department/@item.WorkHoursOTMain.Hour</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">@h.Department/@h.Hour</span>
                                        }
                                    }
                                </td>
                            </tr>
                            <tr style="background-color: #F7FFF3">
                                @foreach (var h in item.WorkHours)
                                {
                                    @if (h.Department != @item.MainDepartment)
                                    {
                                        <td width="50px">
                                            <span class="badge badge-secondary">
                                                @h.Hour/@h.Department
                                            </span>
                                        </td>
                                    }
                                    else
                                    {
                                        <td width="50px">@h.Hour/@h.Department</td>
                                    }
                                }
                            </tr>
                            <tr style="height:5px!important;background-color:whitesmoke">
                                <td style="height:5px!important" colspan="@item.WorkHours.Count">*</td>
                            </tr>
                                        }
                    </table>
                </div>
            </div>
        </div>





        <div class="card mt-2  class=" text-center"">
            <div class="card-header small">
                WorkHour
            </div>
            <div class="card-body">
                <div class="table-responsive">

                    <table class="table table-striped table-sm" style="font-size:12px">
                        <tr>
                            <td>employee</td>
                            @foreach (var department in (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>))
                            {
                                <td>@department.Department</td>
                            }
                        </tr>
                        @foreach (var item in (ViewBag.OT as IEnumerable<Employee>))
                        {
                            <tr style="background-color: #F7FFF3">
                                <td style="text-align: left!important">
                                    @item.Name |
                                    @item.DepartmentLimit |
                                    @item.MainDepartment |
                                    @item.Type
                                    =>
                                    @{int totalot = item.WorkHours.Sum(e => e.Hour) - item.DepartmentLimit;}
                                    <span class="badge badge-success">@item.WorkHours.Sum(e => e.Hour)</span>
                                    -
                                    <span class="badge badge-warning">@item.DepartmentLimit</span>
                                    =
                                    <span class="badge badge-primary">@totalot</span>

                                </td>
                                
                                @foreach (var department in (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>))
                                {
                                    <td>
                                        @foreach (var h in item.WorkHoursOtherMain)
                                        {
                                            @if (@department.Department == h.Department)
                                            {

                                                @if (h.Department == @item.MainDepartment)
                                                {
                                                    <span class="badge badge-secondary">@h.Department [@item.WorkHoursOTMain.Hour]</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-secondary">@h.Department [@h.Hour]</span>
                                                }
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                         }
                        <tr>
                            <td><hr /></td>
                            @foreach (var department in (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>))
                            { 
                                <td><hr />
                                </td>
                            }
                        </tr>
                        <tr>
                            <td><span class="badge badge-success"><b>Total [@((ViewBag.OTTOTAL as IEnumerable<ProductivityOT>).Sum(e=>e.OT))] </b></span></td>
                            @foreach (var department in (ViewBag.OTTOTAL as IEnumerable<ProductivityOT>))
                            { 
                                <td>
                                    <span class="badge badge-success"><b>@department.Department [@department.OT]</b></span>
                                </td>
                            }
                        </tr>
                    </table>
                </div>
            </div>
        </div>




    }


</div>
